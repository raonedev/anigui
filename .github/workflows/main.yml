name: Build Flutter APK with FVM

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master

# Add permissions for creating releases
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Dart (without installing Flutter, as FVM will handle it)
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      # 3. Install FVM globally
      - name: Install FVM
        run: dart pub global activate fvm

      # 4. Add FVM to PATH
      - name: Add FVM to PATH
        run: echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      # 5. Install the Flutter version defined in .fvmrc
      - name: Install Flutter via FVM
        run: fvm install

      # 6. Get dependencies using FVM
      - name: Get dependencies
        run: fvm flutter pub get

      # 7. Build the release APK
      - name: Build release APK
        run: fvm flutter build apk --release

      # 8. Upload APK as a workflow artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-artifact
          path: build/app/outputs/flutter-apk/app-release.apk

      # 9. Create GitHub Release and Upload APK Asset (only for tagged pushes)
      - name: Create GitHub Release and Upload APK Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          name: Release ${{ github.ref_name }}
